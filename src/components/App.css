body {
    background: gainsboro;
}
body * {
    margin: 0;
    padding: 0;
}
.App {
    width: calc(min(100vw, 100vh) * 0.8);
    height: 100vh;
    margin: 0 auto;
    display: grid;
    place-items: center;
    overflow: hidden;
}

.gameGrid {
    display: grid;
    aspect-ratio: 1;
    width: 100%;
    grid-template-columns: repeat(14, 1fr);
    grid-template-rows: repeat(14, 1fr);
    background: rgb(211, 211, 150);
    border-radius: 3px;
}

.pieceSquare {
    display: grid;
    place-items: center;
    /* border-radius: 2px; */
    border: 1px solid rgba(220, 220, 220, 0.364);
}

.pieceSquare.black {
    background: #333;
    color: #fff;
}
.pieceSquare.white {
    background: white;
    color: #333;
}
.pieceSquare.error {
    border: 4px solid red;
    border-color: rgba(184, 33, 58, 0.8);
}

.movementButtonGrid {
    display: grid;
    grid-template-areas:
        "left up right flipH rand rand"
        ".. down rotate flipV rand rand";
    grid-template-rows: 1fr 1fr;
    grid-template-columns: repeat(6, 1fr);
}
.movementButtonGrid button {
    font-size: 1.3rem;
}
.movementButtonGrid .up {
    grid-area: up;
}
.movementButtonGrid .down {
    grid-area: down;
}
.movementButtonGrid .left {
    grid-area: left;
}
.movementButtonGrid .right {
    grid-area: right;
}
.movementButtonGrid .rotate {
    grid-area: rotate;
    transform: scaleX(-1);
}
.movementButtonGrid .flipV {
    grid-area: flipV;
}
.movementButtonGrid .flipH {
    grid-area: flipH;
}
.movementButtonGrid .addRandom {
    grid-area: rand;
}

.startingPositionMarker {
    display: grid;
    place-items: center;
    opacity: 0.5;
}

.startingPositionMarker.white {
    color: white;
}

.startingPositionMarker.black {
    color: #333;
}
